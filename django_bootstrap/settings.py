"""
Django settings for django_bootstrap project.

Generated by 'django-admin startproject' using Django 3.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
import os

from dynaconf import settings as dyna_settings
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-hl-qs1w^vnjg&r)6)zm9o2jwca60e-#=$ckfz(l4j1d=pkzmj@'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = dyna_settings.as_bool('DEBUG')

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.staticfiles',
    'project_tools.apps.ProjectToolsConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'django_bootstrap.urls'

WSGI_APPLICATION = 'django_bootstrap.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': str(dyna_settings.MYSQL_NAME),
        'USER': str(dyna_settings.MYSQL_USER),
        'PASSWORD': str(dyna_settings.MYSQL_PASSWORD),
        'HOST': str(dyna_settings.MYSQL_HOST),
        'PORT': dyna_settings.MYSQL_PORT,
        'TEST': {
            'NAME': str(dyna_settings.MYSQL_NAME_TEST),
            'CHARSET': 'utf8mb4',
            'COLLATION': 'utf8mb4_general_ci'
        },
    }
}

CACHES = {
    'default': {
        'BACKEND': 'django_redis.cache.RedisCache',
        'LOCATION': f'redis://{dyna_settings.REDIS_ADDRESS}',  # noqa
        'OPTIONS': {
            'CLIENT_CLASS': 'django_redis.client.DefaultClient',
        },
    }
}

# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

Path(dyna_settings.LOG_DIR).mkdir(666, True, True)

LOG_LEVEL = 'DEBUG' if DEBUG else 'INFO'
if not dyna_settings.as_bool('IN_ALIYUN_FC'):
    LOGGING = {
        'version': 1,
        'disable_existing_loggers': False,
        'handlers': {
            'console': {
                'level': 'DEBUG',
                'class': 'logging.StreamHandler',
            },
            'file': {
                'level': 'DEBUG',
                'class': 'logging.handlers.RotatingFileHandler',
                'filename': Path(dyna_settings.LOG_DIR) / 'server_running.log',
                'maxBytes': 1024 * 1024 * 20,
                'backupCount': 5,
                'formatter': 'verbose',
            },
        },
        'formatters': {
            'verbose': {
                'format': '[%(levelname)s %(asctime)s %(name)s %(funcName)s %(lineno)d %(process)s %(thread)s ] %(message)s'
                # noqa
            },
            'simple': {
                'format': '%(levelname)s %(message)s'
            },
        },
        'loggers': {
            # configure all of Django's loggers
            'django': {
                'handlers': ['console', 'file'],
                'level': LOG_LEVEL,
                'propagate': False,
            },
            'django.utils.autoreload': {
                'level': 'ERROR',
            },
            # root configuration â€“ for all of our own apps
            '': {
                'handlers': ['console', 'file'],
                'level': LOG_LEVEL,
            },
        }
    }
